{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Pico Debug (Cortex-Debug)",
            // "cwd": "${userHome}/.pico-sdk/openocd/0.12.0+dev/scripts",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "openocd",
            "serverpath": "openocd",
            "gdbPath": "/toolchain/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-gdb",
            // "numberOfProcessors": 2,
            "objdumpPath": "/toolchain/arm-gnu-toolchain-14.2.rel1-x86_64-arm-none-eabi/bin/arm-none-eabi-objdump",
            // "rttConfig": {
            //     "enabled": true,
            //     "address": "auto",
            //     "decoders": [
            //         {
            //             "label": "",
            //             "port": 0,
            //             "type": "console"
            //         }
            //     ]
            // },
            //"showDevDebugOutput": "raw",
            // "swoConfig": {
            //     "enabled": true,
            //     "cpuFrequency": 133000000,
            //     "swoFrequency": 1000000,
            //     "source": "probe",
            //     "decoders": [
            //         {
            //             "label": "",
            //             "port": 0,
            //             "type": "console"
            //         }
            //     ]
            // },
            "device": "RP2040",
            // "rtos": "FreeRTOS",
            "configFiles": [
                "interface/cmsis-dap.cfg",
                "target/rp2040.cfg"
            ],
            "svdFile": "/toolchain/pico-sdk/src/rp2040/hardware_regs/RP2040.svd",
            "runToEntryPoint": "main",
            // Fix for no_flash binaries, where monitor reset halt doesn't do what is expected
            // Also works fine for flash binaries
            "overrideLaunchCommands": [
                "monitor reset init",
                "load \"${command:cmake.launchTargetPath}\"",
                "monitor reset"
            ],
            "openOCDLaunchCommands": [
                "adapter speed 10000"
            ]
        },
        {
            "name": "Pico Debug (Cortex-Debug with external OpenOCD)",
            "cwd": "${workspaceRoot}",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "external",
            "gdbTarget": "localhost:3333",
            "gdbPath": "gdb-multiarch",
            "device": "RP2040",
            "svdFile": "/workspace/pico-sdk/src/rp2040/hardware_regs/RP2040.svd",
            "runToEntryPoint": "main",
            // Fix for no_flash binaries, where monitor reset halt doesn't do what is expected
            // Also works fine for flash binaries
            "overrideLaunchCommands": [
                "monitor reset init",
                "load \"${command:cmake.launchTargetPath}\""
            ]
        },
        {
            "name": "Pico Debug (C++ Debugger)",
            "type": "cppdbg",
            "request": "launch",
            "cwd": "${workspaceRoot}",
            "program": "${command:raspberry-pi-pico.launchTargetPath}",
            "MIMode": "gdb",
            "miDebuggerPath": "${command:raspberry-pi-pico.getGDBPath}",
            "miDebuggerServerAddress": "localhost:3333",
            "debugServerPath": "${userHome}/.pico-sdk/openocd/0.12.0+dev/openocd.exe",
            "debugServerArgs": "-f interface/cmsis-dap.cfg -f target/${command:raspberry-pi-pico.getTarget}.cfg -c \"adapter speed 5000\"",
            "serverStarted": "Listening on port .* for gdb connections",
            "filterStderr": true,
            "hardwareBreakpoints": {
                "require": true,
                "limit": 4
            },
            "preLaunchTask": "Flash",
            "svdPath": "${userHome}/.pico-sdk/sdk/2.1.0/src/${command:raspberry-pi-pico.getChip}/hardware_regs/${command:raspberry-pi-pico.getChipUppercase}.svd"
        },
        {
            "name": "Pico Debug (PyOCD Core 0)",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "pyocd",
            "gdbPath": "gdb-multiarch",
            "device": "RP2040",
            "targetId": "rp2040",
            "svdFile": "/toolchain/pico-sdk/src/rp2040/hardware_regs/RP2040.svd",
            "runToEntryPoint": "main",
            // "loadFiles": "",
            "serverArgs": [
                "--target=rp2040",
                "--core=0",
                "--frequency=5000000"
            ]
        },
        {
            "name": "Pico Debug (PyOCD Core 1)",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "pyocd",
            "gdbPath": "gdb-multiarch",
            "device": "RP2040",
            "targetId": "rp2040",
            "svdFile": "/toolchain/pico-sdk/src/rp2040/hardware_regs/RP2040.svd",
            "runToEntryPoint": "main",
            "loadFiles": [],
            "serverArgs": [
                "--target=rp2040",
                "--core=1",
                "--frequency=5000000"
            ],
            "gdbTarget": "localhost:3334"
        },
        {
            "name": "Pico Debug (PyOCD with Smart Flash)",
            "executable": "${command:cmake.launchTargetPath}",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "pyocd",
            "gdbPath": "gdb-multiarch",
            "device": "RP2040",
            "targetId": "rp2040",
            "svdFile": "/toolchain/pico-sdk/src/rp2040/hardware_regs/RP2040.svd",
            // "runToEntryPoint": "main",
            // "loadFiles": [],
            // "preLaunchTask": "Smart Flash",
            "serverArgs": [
                "--target=rp2040",
                "--frequency=10000000"
            ]
        }
    ],
    "compounds": [
        {
            "name": "Pico Debug (All Cores)",
            "configurations": [
                "Pico Debug (PyOCD Core 0)",
                "Pico Debug (PyOCD Core 1)"
            ]
        }
    ]
}