{
  "configurations": [
    {
      "name": "Pi Pico (DevContainer)",
      "cwd": "${workspaceRoot}",
      "executable": "/workspace/nuttx/nuttx",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "gdbPath": "gdb-multiarch",
      "liveWatch": {
        "enabled": false,
        "samplesPerSecond": 4
      },
      "searchDir": [
        "/usr/local/share/openocd/scripts"
      ],
      "debuggerArgs": [
        "set remotetimeout"
      ],
      "toolchainPrefix": "arm-none-eabi",
      "serverArgs": [
        // "-s",
        // "${env:PICO_SDK_PATH}/../openocd/tcl",
        "-c",
        "adapter speed 5000"
      ],
      "postLaunchCommands": [
        "monitor arm semihosting enable",
      ],
      "preLaunchTask": "build",
      "rttConfig": {
        "enabled": true,
        "address": "auto",
        "decoders": [
          {
            "label": "",
            "port": 0,
            "type": "console"
          }
        ]
      },
      "rtos": "auto",
      "device": "RP2040",
      "configFiles": [
        "interface/cmsis-dap.cfg",
        "target/rp2040.cfg"
      ],
      //"showDevDebugOutput": "raw",
      "svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      //"runToEntryPoint": "main",
      "postRestartCommands": [
        "continue"
      ] //,
            //"loadFiles": []
    },
    {
      "name": "ESP32S3 (DevContainer)",
      "cwd": "${workspaceRoot}",
      "executable": "/workspace/nuttx/nuttx.bin",
      "request": "launch",
      "type": "cortex-debug",
      "servertype": "openocd",
      "gdbPath": "/tools/espressif/tools/xtensa-esp-elf-gdb/14.2_20240403/xtensa-esp-elf-gdb/bin/xtensa-esp32s3-elf-gdb",
      
      "liveWatch": {
        "enabled": false,
        "samplesPerSecond": 4
      },
      "searchDir": [
        "/usr/local/share/openocd/scripts"
      ],
      "debuggerArgs": [
        "set remotetimeout"
      ],
      "toolchainPrefix": "xtensa-esp32s3-elf",
      "armToolchainPath": "/tools/espressif/tools/xtensa-esp-elf-gdb/14.2_20240403/xtensa-esp-elf-gdb/bin/",
      "serverArgs": [
        // "-s",
        // "${env:PICO_SDK_PATH}/../openocd/tcl",
        "-c",
        "adapter speed 5000; set ESP_RTOS hwthread; set ESP_FLASH_SIZE 0",
      ],
      "postLaunchCommands": [
        //"monitor arm semihosting enable",
        "target remote :3333",
        "set remote hardware-watchpoint-limit 2",
        "mon reset halt",
        "flushregs",
        "monitor reset halt",
        "thb nsh_main",
        "c"
      ],
      "preLaunchTask": "build",
      "rttConfig": {
        "enabled": true,
        "address": "auto",
        "decoders": [
          {
            "label": "",
            "port": 0,
            "type": "console"
          }
        ]
      },
      "rtos": "auto",
      //"device": "RP2040",
      "configFiles": [
        "board/esp32s3-builtin.cfg"
        // "target/rp2040.cfg"
      ],
      //"showDevDebugOutput": "raw",
      //"svdFile": "${env:PICO_SDK_PATH}/src/rp2040/hardware_regs/rp2040.svd",
      //"runToEntryPoint": "main",
      "postRestartCommands": [
        "continue"
      ] //,
            //"loadFiles": []
    },
    {
      "type": "cppdbg",
      "request": "launch",
      "name": "Launch Program",
      "program": "${workspaceFolder}/${input:executableName}.elf",
      "cwd": "${workspaceFolder}",
      "stopAtEntry": true,
      "preLaunchTask": "build"
    },
    {
      "name": "RP2040 Debug",
      "type": "cppdbg",
      "request": "launch",
      "cwd": "${workspaceFolder}",
      "program": "${workspaceFolder}/nuttx/nuttx",
      "MIMode": "gdbserver",
      "miDebuggerPath": "/tools/gcc-arm-none-eabi/bin/arm-none-eabi-gdb",
      "miDebuggerServerAddress": "localhost:3333",
      "debugServerPath": "/usr/local/bin/openocd",
      "debugServerArgs": "-f interface/cmsis-dap.cfg -f target/rp2040.cfg -c \"adapter speed 5000\"",
      "serverStarted": "Listening on port .* for gdb connections",
      "filterStderr": true,
      "stopAtEntry": true,
      "setupCommands": [
        {
          "description": "Enable pretty-printing for gdb",
          "text": "-enable-pretty-printing",
          "ignoreFailures": true
        },
        {
          "description": "Enable semihosting",
          "text": "monitor arm semihosting enable",
          "ignoreFailures": true
        }
      ]
    }
  ],
  "inputs": [
    {
      "type": "promptString",
      "id": "executableName",
      "description": "Name of your executable"
    }
  ]
}