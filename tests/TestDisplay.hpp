#pragma once

#include "../src/Display.hxx"
#include <gmock/gmock.h>

namespace PowerFeed
{
	class TestDisplay : public Display
	{
	public:
		TestDisplay(SettingsManager *settings, const unsigned char *font) : Display(settings, font) {}
		MOCK_METHOD(void, ClearBuffer, (), (override));
		MOCK_METHOD(void, WriteBuffer, (), (override));
		MOCK_METHOD(void, Refresh, (), (override));
		MOCK_METHOD(void, DrawText, (const char *text, const unsigned char *font, uint16_t x, uint16_t y), (override));
		MOCK_METHOD(void, DrawImage, (const unsigned char *image, uint16_t x, uint16_t y, uint16_t width, uint16_t height), (override));
	};

	class MockDisplay : public TestDisplay
	{
	public:
		MockDisplay() : TestDisplay(nullptr, nullptr) {}
		MOCK_METHOD(void, DrawStart, (), (override));
		MOCK_METHOD(void, DrawMovingLeft, (), (override));
		MOCK_METHOD(void, DrawMovingRight, (), (override));
		MOCK_METHOD(void, DrawStopping, (), (override));
		MOCK_METHOD(void, DrawStopped, (), (override));
		MOCK_METHOD(void, DrawRapidLeft, (), (override));
		MOCK_METHOD(void, DrawRapidRight, (), (override));
		MOCK_METHOD(void, DrawSpeed, (uint32_t aSpeed), (override));
		MOCK_METHOD(void, ToggleUnits, (), (override));
		MOCK_METHOD(void, WriteBuffer, (), (override));
		MOCK_METHOD(void, Refresh, (), (override));
	};

	const unsigned char font_5x8[] = {
		0x5, 0x8, // font width, height

		0x0,
		0x0,
		0x0,
		0x0,
		0x0,

		0x0,
		0x0,
		0x5c,
		0x0,
		0x0,

		0x0,
		0xc,
		0x0,
		0xc,
		0x0,

		0x28,
		0x7c,
		0x28,
		0x7c,
		0x28,

		0x0,
		0x50,
		0xec,
		0x28,
		0x0,

		0x44,
		0x2a,
		0x34,
		0x58,
		0x24,

		0x20,
		0x58,
		0x54,
		0x24,
		0x50,

		0x0,
		0x0,
		0x6,
		0x0,
		0x0,

		0x0,
		0x38,
		0x44,
		0x0,
		0x0,

		0x0,
		0x44,
		0x38,
		0x0,
		0x0,

		0x0,
		0x54,
		0x38,
		0x54,
		0x0,

		0x0,
		0x10,
		0x38,
		0x10,
		0x0,

		0x0,
		0x80,
		0x40,
		0x0,
		0x0,

		0x8,
		0x8,
		0x8,
		0x8,
		0x0,

		0x0,
		0x0,
		0x40,
		0x0,
		0x0,

		0x0,
		0x60,
		0x18,
		0x4,
		0x0,

		0x38,
		0x44,
		0x44,
		0x38,
		0x0,

		0x0,
		0x8,
		0x7c,
		0x0,
		0x0,

		0x48,
		0x64,
		0x54,
		0x48,
		0x0,

		0x44,
		0x54,
		0x54,
		0x28,
		0x0,

		0x20,
		0x30,
		0x28,
		0x7c,
		0x0,

		0x5c,
		0x54,
		0x54,
		0x24,
		0x0,

		0x38,
		0x54,
		0x54,
		0x20,
		0x0,

		0x4,
		0x64,
		0x14,
		0xc,
		0x0,

		0x28,
		0x54,
		0x54,
		0x28,
		0x0,

		0x8,
		0x54,
		0x54,
		0x38,
		0x0,

		0x0,
		0x0,
		0x50,
		0x0,
		0x0,

		0x0,
		0x80,
		0x50,
		0x0,
		0x0,

		0x0,
		0x10,
		0x28,
		0x44,
		0x0,

		0x0,
		0x28,
		0x28,
		0x28,
		0x0,

		0x0,
		0x44,
		0x28,
		0x10,
		0x0,

		0x0,
		0x54,
		0x14,
		0x8,
		0x0,

		0x38,
		0x44,
		0x54,
		0x54,
		0x8,

		0x78,
		0x14,
		0x14,
		0x78,
		0x0,

		0x7c,
		0x54,
		0x54,
		0x28,
		0x0,

		0x38,
		0x44,
		0x44,
		0x44,
		0x0,

		0x7c,
		0x44,
		0x44,
		0x38,
		0x0,

		0x7c,
		0x54,
		0x54,
		0x44,
		0x0,

		0x7c,
		0x14,
		0x14,
		0x4,
		0x0,

		0x38,
		0x44,
		0x44,
		0x68,
		0x0,

		0x7c,
		0x10,
		0x10,
		0x7c,
		0x0,

		0x0,
		0x44,
		0x7c,
		0x44,
		0x0,

		0x30,
		0x40,
		0x40,
		0x3c,
		0x0,

		0x7c,
		0x10,
		0x28,
		0x44,
		0x0,

		0x7c,
		0x40,
		0x40,
		0x40,
		0x0,

		0x7c,
		0x10,
		0x10,
		0x7c,
		0x0,

		0x7c,
		0x8,
		0x10,
		0x7c,
		0x0,

		0x38,
		0x44,
		0x44,
		0x38,
		0x0,

		0x7c,
		0x14,
		0x14,
		0x8,
		0x0,

		0x38,
		0x44,
		0x44,
		0xb8,
		0x0,

		0x7c,
		0x14,
		0x14,
		0x68,
		0x0,

		0x48,
		0x54,
		0x54,
		0x24,
		0x0,

		0x4,
		0x4,
		0x7c,
		0x4,
		0x4,

		0x3c,
		0x40,
		0x40,
		0x3c,
		0x0,

		0x1c,
		0x60,
		0x60,
		0x1c,
		0x0,

		0x1c,
		0x60,
		0x18,
		0x60,
		0x1c,

		0x4c,
		0x30,
		0x10,
		0x6c,
		0x0,

		0x0,
		0x1c,
		0x60,
		0x1c,
		0x0,

		0x64,
		0x54,
		0x4c,
		0x44,
		0x0,

		0x0,
		0x7c,
		0x44,
		0x0,
		0x0,

		0x0,
		0xc,
		0x30,
		0x40,
		0x0,

		0x0,
		0x44,
		0x7c,
		0x0,
		0x0,

		0x0,
		0x8,
		0x4,
		0x8,
		0x0,

		0x80,
		0x80,
		0x80,
		0x80,
		0x80,

		0x0,
		0x4,
		0x8,
		0x0,
		0x0,

		0x0,
		0x68,
		0x28,
		0x70,
		0x0,

		0x7e,
		0x48,
		0x48,
		0x30,
		0x0,

		0x0,
		0x30,
		0x48,
		0x48,
		0x0,

		0x30,
		0x48,
		0x48,
		0x7c,
		0x0,

		0x30,
		0x58,
		0x58,
		0x50,
		0x0,

		0x10,
		0x78,
		0x14,
		0x4,
		0x0,

		0x10,
		0xa8,
		0xa8,
		0x78,
		0x0,

		0x7c,
		0x8,
		0x8,
		0x70,
		0x0,

		0x0,
		0x48,
		0x7a,
		0x40,
		0x0,

		0x0,
		0x80,
		0x80,
		0x7a,
		0x0,

		0x7c,
		0x10,
		0x28,
		0x40,
		0x0,

		0x0,
		0x42,
		0x7e,
		0x40,
		0x0,

		0x78,
		0x10,
		0x10,
		0x78,
		0x0,

		0x78,
		0x8,
		0x8,
		0x70,
		0x0,

		0x30,
		0x48,
		0x48,
		0x30,
		0x0,

		0xf8,
		0x48,
		0x48,
		0x30,
		0x0,

		0x30,
		0x48,
		0x48,
		0xf8,
		0x0,

		0x0,
		0x78,
		0x10,
		0x8,
		0x0,

		0x50,
		0x58,
		0x68,
		0x28,
		0x0,

		0x8,
		0x3c,
		0x48,
		0x48,
		0x0,

		0x38,
		0x40,
		0x40,
		0x78,
		0x0,

		0x18,
		0x60,
		0x60,
		0x18,
		0x0,

		0x78,
		0x20,
		0x20,
		0x78,
		0x0,

		0x48,
		0x30,
		0x30,
		0x48,
		0x0,

		0x18,
		0xa0,
		0xa0,
		0x78,
		0x0,

		0x48,
		0x68,
		0x58,
		0x48,
		0x0,

		0x0,
		0x18,
		0x24,
		0x42,
		0x0,

		0x0,
		0x0,
		0x7e,
		0x0,
		0x0,

		0x0,
		0x42,
		0x24,
		0x18,
		0x0,

		0x10,
		0x8,
		0x10,
		0x8,
		0x0};

} // namespace PicoMill