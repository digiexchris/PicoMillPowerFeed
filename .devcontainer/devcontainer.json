// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/mwinters-stuff/vscode-devcontainer-raspberrypi-pico
{
    "name": "C++ Raspberry Pi Pico",
    "build": {
        // "dockerfile": "Dockerfile.nuttx.rp2040"
        "dockerfile": "Dockerfile.rpi"
    },
    "containerEnv": {
        "FLASH_SCRIPT": "flash.sh",
        "PICO_SDK_PATH": "/tools/pico/pico-sdk",
        "IDF_TOOLS_PATH": "/tools/espressif"
        // "PYTHON_PATH": "/usr/local/lib/python3.12/dist-packages",
        // "PYTHONPATH": "/usr/local/lib/python3.12/dist-packages"
    },
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind",
    "workspaceFolder": "/workspace",
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt",
        "seccomp=unconfined",
        "--privileged",
        "-v",
        "/dev/bus/usb:/dev/bus/usb",
        "--device=/dev/bus/usb"
        // "--device=/dev/ttyACM0"
    ],
    "customizations": {
        "vscode": {
            "settings": {
                "terminal.integrated.profiles.linux": {
                    "bash": {
                        "path": "/usr/bin/bash"
                    }
                },
                "cortex-debug.armToolchainPath.linux": "/tools/gcc-arm-none-eabi/bin"
            },
            "extensions": [
                "ms-vscode.cpptools",
                "marus25.cortex-debug",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "eamodio.gitlens",
                "xaver.clang-format",
                "chris-hock.pioasm",
                "IBM.output-colorizer",
                "actboy168.tasks",
                "SanaAjani.taskrunnercode",
                "ms-vscode-remote.remote-containers",
                "llvm-vs-code-extensions.vscode-clangd",
                "vadimcn.vscode-lldb",
                "matepek.vscode-catch2-test-adapter",
                "ms-vscode.makefile-tools"
            ]
        }
    },
    // Set *default* container specific settings.json values on container create.
    // Add the IDs of extensions you want installed when the container is created.
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // Use 'postCreateCommand' to run commands after the container is created.
    "postCreateCommand": "sudo cp /workspace/tools/linux/picotool /usr/local/bin/",
    "postAttachCommand": "source /tools/espressif/frameworks/esp-idf/export.sh > /dev/null 2>&1"
    // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
    //"remoteUser": "vscode"
}